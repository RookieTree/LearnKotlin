package com.tree.learnkotlin


/*
 *  @项目名：  LearnKotlin 
 *  @包名：    com.tree.learnkotlin
 *  @文件名:   Learn12_2
 *  @创建者:   rookietree
 *  @创建时间:  2022/8/26 19:24
 *  @描述：    不变性思维
 */

/**
 * 第一，尽可能使用条件表达式消灭 var。由于 Kotlin 当中大部分语句都是表达式，我们可以借助这种思路减少 var 变量的定义。
 * 第二，使用数据类来存储数据，消灭数据类的可变性。我们应该充分发挥 Kotlin 数据类的优势，借助它提供的 copy 方法，我们可以轻松实现不变性。
 * 第三，尽可能对外暴露只读集合。根据开放封闭原则，我们的程序应该尽量对修改封闭。借助 Kotlin 的只读集合，我们在这方面可以做得比 Java 更好。
 * 第四，只读集合底层不一定是不可变的，要警惕 Java 代码中的只读集合访问行为。Kotlin 为了兼容 Java，它的集合类型必须要与 Java 兼容，因此它不能创造出 Java 以外的集合类型，这也就决定了它只能是语法层面的不可变性。Kotlin 官方也在考虑进一步的优化，期待后续的版本能有更加优雅的处理方式。
 * 第五，val 并不意味着绝对的不可变。在 Kotlin 当中定义的 val 变量与属性，它们并非绝对不可变的。由于 Kotlin 的语法十分灵活，我们完全可以用 val 写出可变的局部变量和成员属性。这一点，我们一定要小心。
 */
 